{"version":3,"sources":["context/alert/alertContext.js","components/Alert.js","components/Navbar.js","context/alert/alertReducer.js","context/alert/AlertState.js","context/firebase/firebaseContext.js","context/firebase/firebaseReducer.js","context/firebase/FirebaseState.js","pages/About.js","components/Form.js","components/Loader.js","components/Notes.js","pages/Home.js","App.js","reportWebVitals.js","index.js"],"names":["AlertContext","createContext","Alert","useContext","alert","hide","CSSTransition","in","visible","timeout","enter","exit","classNames","mountOnEnter","unmountOnExit","className","type","text","onClick","aria-label","aria-hidden","Navbar","to","exact","SHOW_ALERT","HIDE_ALERT","alertReducer","state","action","payload","AlertState","children","useReducer","dispatch","Provider","value","show","FirebaseContext","SHOW_LOADER","ADD_NOTE","FETCH_NOTES","REMOVE_NOTE","firebaseReducer","loading","notes","filter","note","id","url","process","FirebaseState","showLoader","fetchNotes","a","axios","get","response","Object","keys","data","map","key","addNote","title","date","Date","toJSON","post","name","Error","message","removeNote","delete","About","Form","useState","setValue","firebase","onSubmit","event","preventDefault","trim","then","catch","error","placeholder","onChange","target","Loader","role","Notes","onRemove","TransitionGroup","component","Home","useEffect","App","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a072f8a6.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const AlertContext = createContext();","import React, { useContext } from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { AlertContext } from \"../context/alert/alertContext\";\r\n\r\nexport const Alert = () => {\r\n  const { alert, hide } = useContext(AlertContext);\r\n\r\n  return (\r\n    <CSSTransition\r\n      in={alert.visible}\r\n      timeout={{ enter: 500, exit: 350 }}\r\n      classNames={\"alert\"}\r\n      mountOnEnter\r\n      unmountOnExit\r\n    >\r\n      <div\r\n        className={`alert alert-${alert.type || \"warning\"} alert-dismissible`}\r\n      >\r\n        <strong>Attention! </strong>\r\n        {alert.text}\r\n        <button\r\n          onClick={hide}\r\n          type=\"button\"\r\n          className=\"close\"\r\n          aria-label=\"Close\"\r\n        >\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n    </CSSTransition>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport const Navbar = () => {\r\n  return (\r\n    <nav className=\"navbar navbar-dark navbar-expand-lg bg-primary\">\r\n      <div className=\"navbar-brand\">Note App</div>\r\n      <ul className=\"navbar-nav\">\r\n        <li className=\"nav-item\">\r\n          <NavLink className=\"nav-link\" to=\"/\" exact>\r\n            Home\r\n          </NavLink>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <NavLink className=\"nav-link\" to=\"/about\">\r\n            About us\r\n          </NavLink>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n","export const SHOW_ALERT = 'alertReducer/SHOW_ALERT';\r\nexport const HIDE_ALERT = 'alertReducer/HIDE_ALERT';\r\n\r\nexport const alertReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case SHOW_ALERT:\r\n      return ({...state,...action.payload,visible:true});\r\n      case HIDE_ALERT:\r\n      return ({...state,visible:false});\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { useReducer } from \"react\";\r\nimport { AlertContext } from \"./alertContext\";\r\nimport { alertReducer, HIDE_ALERT, SHOW_ALERT } from \"./alertReducer\";\r\n\r\nexport const AlertState = ({ children }) => {\r\n  const [state, dispatch] = useReducer(alertReducer, { visible: false });\r\n\r\n  const show = (text, type = \"warning\") => {\r\n    dispatch({\r\n      type: SHOW_ALERT,\r\n      payload: { text, type },\r\n    });\r\n  };\r\n\r\n  const hide = () => {\r\n    dispatch({\r\n      type: HIDE_ALERT,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <AlertContext.Provider value={{ show, hide, alert: state }}>\r\n      {children}\r\n    </AlertContext.Provider>\r\n  );\r\n};\r\n","import { createContext } from \"react\";\r\n\r\nexport const FirebaseContext = createContext();","export const SHOW_LOADER = \"firebaseReducer/SHOW_LOADER\";\r\nexport const ADD_NOTE = \"firebaseReducer/ADD_NOTE\";\r\nexport const FETCH_NOTES = \"firebaseReducer/FETCH_NOTES\";\r\nexport const REMOVE_NOTE = \"firebaseReducer/REMOVE_NOTE\";\r\n\r\nexport const firebaseReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case SHOW_LOADER:\r\n      return { ...state, loading: true };\r\n    case ADD_NOTE:\r\n      return { ...state, notes: [...state.notes, action.payload] };\r\n    case FETCH_NOTES:\r\n      return { ...state, notes: action.payload, loading: false };\r\n    case REMOVE_NOTE:\r\n      return {\r\n        ...state,\r\n        notes: state.notes.filter((note) => note.id !== action.id),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import axios from \"axios\";\r\nimport React, { useReducer } from \"react\";\r\nimport { FirebaseContext } from \"./firebaseContext\";\r\nimport {\r\n  ADD_NOTE,\r\n  FETCH_NOTES,\r\n  firebaseReducer,\r\n  REMOVE_NOTE,\r\n  SHOW_LOADER,\r\n} from \"./firebaseReducer\";\r\nconst url = process.env.REACT_APP_DB_URL;\r\n\r\nexport const FirebaseState = ({ children }) => {\r\n  const initialState = {\r\n    notes: [],\r\n    loading: false,\r\n  };\r\n  const [state, dispatch] = useReducer(firebaseReducer, initialState);\r\n\r\n  const showLoader = () => dispatch({ type: SHOW_LOADER });\r\n  const fetchNotes = async () => {\r\n    showLoader();\r\n    const response = await axios.get(`${url}/notes.json`);\r\n    const payload=Object.keys(response.data).map((key) => {\r\n      return { ...response.data[key], id: key };\r\n    });\r\n    dispatch({ type: FETCH_NOTES, payload });\r\n  };\r\n  const addNote = async (title) => {\r\n    const note = {\r\n      title,\r\n      date: new Date().toJSON(),\r\n    };\r\n    try {\r\n      const response = await axios.post(`${url}/notes.json`, note);\r\n      // console.log(\"addNote\", response.data);\r\n      const payload = { ...note, id: response.data.name };\r\n      dispatch({ type: ADD_NOTE, payload });\r\n    } catch (e) {\r\n      throw new Error(e.message);\r\n    }\r\n  };\r\n  const removeNote = async (id) => {\r\n    await axios.delete(`${url}/notes/${id}.json`);\r\n    dispatch({ type: REMOVE_NOTE, id });\r\n  };\r\n\r\n  return (\r\n    <FirebaseContext.Provider\r\n      value={{\r\n        showLoader,\r\n        fetchNotes,\r\n        addNote,\r\n        removeNote,\r\n        loading: state.loading,\r\n        notes: state.notes,\r\n      }}\r\n    >\r\n      {children}\r\n    </FirebaseContext.Provider>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const About = () => {\r\n  return (\r\n    <div className=\"jumbotron\">\r\n      <div className=\"container\">\r\n        <h1 className=\"display-4\">About us</h1>\r\n        <p className=\"lead\">\r\n          This is our not a great app for daily memos.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useContext, useState } from \"react\";\r\nimport { AlertContext } from \"../context/alert/alertContext\";\r\nimport { FirebaseContext } from \"../context/firebase/firebaseContext\";\r\n\r\nexport const Form = () => {\r\n  const [value, setValue] = useState(\"\");\r\n  const alert = useContext(AlertContext);\r\n  const firebase = useContext(FirebaseContext);\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    if (value.trim()) {\r\n      firebase\r\n        .addNote(value.trim())\r\n        .then(() => {\r\n          alert.show(\"Note was created\", \"success\");\r\n        })\r\n        .catch((error) => {\r\n          alert.show(\"Somthing is wrong ...\", \"danger\");\r\n        });\r\n      alert.show(\"Note was created\", \"success\");\r\n      setValue(\"\");\r\n    } else {\r\n      alert.show(\"Enter a title for the note!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"form-group\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"Enter a title for the note\"\r\n          value={value}\r\n          onChange={(event) => setValue(event.target.value)}\r\n        />\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const Loader = () => {\r\n  return (\r\n    <div className=\"center\">\r\n      <div className=\"spinner-border\" role=\"status\">\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\n\r\nexport const Notes = ({ notes, onRemove, alert }) => {\r\n  return (\r\n    <TransitionGroup component=\"ul\" className=\"list-group\">\r\n      {notes.map((note) => (\r\n        <CSSTransition key={note.id} classNames=\"noteItem\" timeout={800}>\r\n          <li className=\"list-group-item note\">\r\n            <div>\r\n              <b>{note.title}</b>\r\n              <small>{note.date}</small>\r\n            </div>\r\n            <button\r\n              onClick={() => {\r\n                onRemove(note.id);\r\n                alert.show(\"Note was deleted\", \"danger\");\r\n              }}\r\n              type=\"button\"\r\n              className=\"btn btn-outline-danger btn-sm\"\r\n            >\r\n              &times;\r\n            </button>\r\n          </li>\r\n        </CSSTransition>\r\n      ))}\r\n    </TransitionGroup>\r\n  );\r\n};\r\n","import React, { Fragment, useContext, useEffect } from \"react\";\r\nimport { Form } from \"../components/Form\";\r\nimport { Loader } from \"../components/Loader\";\r\nimport { Notes } from \"../components/Notes\";\r\nimport { AlertContext } from \"../context/alert/alertContext\";\r\nimport { FirebaseContext } from \"../context/firebase/firebaseContext\";\r\n\r\nexport const Home = () => {\r\n  const { notes, loading, fetchNotes, removeNote } = useContext(\r\n    FirebaseContext\r\n  );\r\n  const alert = useContext(AlertContext);\r\n  useEffect(() => {\r\n    fetchNotes();\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Form />\r\n      <hr />\r\n      {loading ? <Loader /> : <Notes notes={notes} onRemove={removeNote} alert={alert}/>}\r\n    </Fragment>\r\n  );\r\n};\r\n","import React from \"react\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport { Alert } from \"./components/Alert\";\nimport { Navbar } from \"./components/Navbar\";\nimport { AlertState } from \"./context/alert/AlertState\";\nimport { FirebaseState } from \"./context/firebase/FirebaseState\";\nimport { About } from \"./pages/About\";\nimport { Home } from \"./pages/Home\";\n\nfunction App() {\n  return (\n    <FirebaseState>\n      <AlertState>\n        <HashRouter>\n          <Navbar />\n          <div className=\"container pt-4\">\n            <Alert />\n            <Switch>\n              <Route path={\"/\"} exact render={() => <Home />} />\n              <Route path={\"/about\"} render={() => <About />} />\n              <Route path={\"/\"} render={() => <h1>404</h1>} />\n            </Switch>\n          </div>\n        </HashRouter>\n      </AlertState>\n    </FirebaseState>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}